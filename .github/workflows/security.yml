name: Security Audit

on:
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install cargo-audit
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-audit

      - name: Run cargo audit
        uses: actions-rs/cargo@v1
        with:
          command: audit
          args: --json
        continue-on-error: true
        id: audit

      - name: Install cargo-deny
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-deny

      - name: Run cargo deny
        uses: actions-rs/cargo@v1
        with:
          command: deny
          args: check

      - name: Upload audit results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: security-audit-results
          path: |
            audit-results.json
            deny-results.txt

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: moderate
          allow-licenses: MIT, Apache-2.0, BSD-3-Clause, ISC, Unicode-DFS-2016

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: rust

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang libclang-dev cmake build-essential git pkg-config libssl-dev protobuf-compiler

      - name: Build for CodeQL
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
